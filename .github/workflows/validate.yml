name: Validate
on:
  schedule:
    - cron: "0 4 * * *"
  pull_request:

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack start
        if: success()
        id: slack # IMPORTANT: reference this step ID value in future Slack steps
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: bandwidth/github-action-slack-notify-build@v1
        with:
          channel: SLACK_CHANNEL
          status: STARTING
          color: warning
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: dotnet build
      - name: Test
        env:
          BW_ACCOUNT_ID: ${{ secrets.BW_ACCOUNT_ID }}
          BW_USERNAME: ${{ secrets.BW_USERNAME }}
          BW_PASSWORD: ${{ secrets.BW_PASSWORD }}
          BW_VOICE_APPLICATION_ID: ${{ secrets.BW_VOICE_APPLICATION_ID }}
          BW_MESSAGING_APPLICATION_ID: ${{ secrets.BW_MESSAGING_APPLICATION_ID }}
          BW_NUMBER: ${{ secrets.BW_NUMBER }}
          USER_NUMBER: ${{ secrets.USER_NUMBER }}
          BASE_CALLBACK_URL: ${{ secrets.BASE_CALLBACK_URL }}
        run: dotnet test Bandwidth.StandardTests
      - name: Notify Slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: bandwidth/github-action-slack-notify-build@v1
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: SLACK_CHANNEL
          status: SUCCESS
          color: good
