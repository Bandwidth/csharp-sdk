/*
 * Bandwidth.Tests
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Threading.Tasks;
using Newtonsoft.Json.Converters;
using Bandwidth.Standard;
using Bandwidth.Standard.Utilities; 
using Bandwidth.Standard.Http.Client;
using Bandwidth.Standard.Http.Response;
using Bandwidth.Tests.Helpers;
using NUnit.Framework;
using Bandwidth.Standard.Messaging.Controllers;
using Bandwidth.Standard.Exceptions;

namespace Bandwidth.Tests
{
    [TestFixture]
    public class APIControllerTest : ControllerTestBase
    {
        /// <summary>
        /// Controller instance (for all tests)
        /// </summary>
        private APIController controller;

        /// <summary>
        /// Setup test class
        /// </summary>
        [OneTimeSetUp]
        public void SetUpDerived()
        {
            controller = client.Messaging.APIController;
        }

        /// <summary>
        /// listMedia 
        /// </summary>
        [Test]
        public async Task TestTestListMedia() 
        {
            // Parameters for the API call
            string userId = "900000";
            string continuationToken = "12345";

            // Perform API call
            ApiResponse<List<Standard.Messaging.Models.Media>> result = null;

            try
            {
                result = await controller.ListMediaAsync(userId, continuationToken);
            }
            catch(ApiException) {}

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Content-Type", "application/json");

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

        }

        /// <summary>
        /// getMedia 
        /// </summary>
        [Test]
        public async Task TestTestGetMedia() 
        {
            // Parameters for the API call
            string userId = "900000";
            string mediaId = "0a610655-ba58";

            // Perform API call
            ApiResponse<Stream> result = null;

            try
            {
                result = await controller.GetMediaAsync(userId, mediaId);
            }
            catch(ApiException) {}

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Content-Type", "application/octet-stream");

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

        }

        /// <summary>
        /// deleteMedia 
        /// </summary>
        [Test]
        public async Task TestTestDeleteMedia() 
        {
            // Parameters for the API call
            string userId = "900000";
            string mediaId = "tjdla-4562ld";

            // Perform API call

            try
            {
                await controller.DeleteMediaAsync(userId, mediaId);
            }
            catch(ApiException) {}

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

        }

        /// <summary>
        /// getMessages 
        /// </summary>
        [Test]
        public async Task TestTestGetMessages() 
        {
            // Parameters for the API call
            string userId = "900000";
            string messageId = "9e0df4ca-b18d-40d7-a59f-82fcdf5ae8e6";
            string sourceTn = "%2B15554443333";
            string destinationTn = "%2B15554443333";
            string messageStatus = "RECEIVED";
            int? errorCode = 9902;
            string fromDateTime = "2016-09-14T18:20:16.000Z";
            string toDateTime = "2016-09-14T18:20:16.000Z";
            string pageToken = "gdEewhcJLQRB5";
            int? limit = 50;

            // Perform API call
            ApiResponse<Standard.Messaging.Models.BandwidthMessagesList> result = null;

            try
            {
                result = await controller.GetMessagesAsync(userId, messageId, sourceTn, destinationTn, messageStatus, errorCode, fromDateTime, toDateTime, pageToken, limit);
            }
            catch(ApiException) {}

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Content-Type", "application/json");

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

        }

    }
}