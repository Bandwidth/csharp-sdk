/*
 * Bandwidth.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Bandwidth.Standard;
using Bandwidth.Standard.Utilities;

namespace Bandwidth.Standard.Voice.Models
{
    public class Transcript 
    {
        public Transcript() { }

        public Transcript(string text = null,
            double? confidence = null)
        {
            Text = text;
            Confidence = confidence;
        }

        /// <summary>
        /// Getter for text
        /// </summary>
        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        /// <summary>
        /// Getter for confidence
        /// </summary>
        [JsonProperty("confidence", NullValueHandling = NullValueHandling.Ignore)]
        public double? Confidence { get; set; }

        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"Transcript : ({string.Join(", ", toStringOutput)})";
        }

        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"Text = {(Text == null ? "null" : Text == string.Empty ? "" : Text)}");
            toStringOutput.Add($"Confidence = {(Confidence == null ? "null" : Confidence.ToString())}");
        }

        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }

            return obj is Transcript other &&
                ((Text == null && other.Text == null) || (Text?.Equals(other.Text) == true)) &&
                ((Confidence == null && other.Confidence == null) || (Confidence?.Equals(other.Confidence) == true));
        }

        public override int GetHashCode()
        {
            int hashCode = 866752038;

            if (Text != null)
            {
               hashCode += Text.GetHashCode();
            }

            if (Confidence != null)
            {
               hashCode += Confidence.GetHashCode();
            }

            return hashCode;
        }

    }
}