/*
 * Bandwidth.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Bandwidth.Standard;
using Bandwidth.Standard.Utilities;

namespace Bandwidth.Standard.Voice.Models
{
    public class Transcription 
    {
        public Transcription() { }

        public Transcription(string id = null,
            Models.Status3Enum? status = null,
            string completedTime = null,
            string url = null)
        {
            Id = id;
            Status = status;
            CompletedTime = completedTime;
            Url = url;
        }

        /// <summary>
        /// Getter for id
        /// </summary>
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        /// <summary>
        /// Getter for status
        /// </summary>
        [JsonProperty("status", ItemConverterType = typeof(StringValuedEnumConverter), NullValueHandling = NullValueHandling.Ignore)]
        public Models.Status3Enum? Status { get; set; }

        /// <summary>
        /// Getter for completedTime
        /// </summary>
        [JsonProperty("completedTime", NullValueHandling = NullValueHandling.Ignore)]
        public string CompletedTime { get; set; }

        /// <summary>
        /// Getter for url
        /// </summary>
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"Transcription : ({string.Join(", ", toStringOutput)})";
        }

        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"Id = {(Id == null ? "null" : Id == string.Empty ? "" : Id)}");
            toStringOutput.Add($"Status = {(Status == null ? "null" : Status.ToString())}");
            toStringOutput.Add($"CompletedTime = {(CompletedTime == null ? "null" : CompletedTime == string.Empty ? "" : CompletedTime)}");
            toStringOutput.Add($"Url = {(Url == null ? "null" : Url == string.Empty ? "" : Url)}");
        }

        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }

            return obj is Transcription other &&
                ((Id == null && other.Id == null) || (Id?.Equals(other.Id) == true)) &&
                ((Status == null && other.Status == null) || (Status?.Equals(other.Status) == true)) &&
                ((CompletedTime == null && other.CompletedTime == null) || (CompletedTime?.Equals(other.CompletedTime) == true)) &&
                ((Url == null && other.Url == null) || (Url?.Equals(other.Url) == true));
        }

        public override int GetHashCode()
        {
            int hashCode = 732808726;

            if (Id != null)
            {
               hashCode += Id.GetHashCode();
            }

            if (Status != null)
            {
               hashCode += Status.GetHashCode();
            }

            if (CompletedTime != null)
            {
               hashCode += CompletedTime.GetHashCode();
            }

            if (Url != null)
            {
               hashCode += Url.GetHashCode();
            }

            return hashCode;
        }

    }
}