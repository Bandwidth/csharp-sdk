/*
 * Bandwidth.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Bandwidth.Standard;
using Bandwidth.Standard.Utilities;

namespace Bandwidth.Standard.Voice.Models
{
    public class ConferenceDetail 
    {
        public ConferenceDetail() { }

        public ConferenceDetail(string id = null,
            string name = null,
            DateTime? createdTime = null,
            DateTime? completedTime = null,
            string conferenceEventUrl = null,
            Models.ConferenceEventMethodEnum? conferenceEventMethod = null,
            string tag = null,
            List<Models.ConferenceMemberDetail> activeMembers = null)
        {
            Id = id;
            Name = name;
            CreatedTime = createdTime;
            CompletedTime = completedTime;
            ConferenceEventUrl = conferenceEventUrl;
            ConferenceEventMethod = conferenceEventMethod;
            Tag = tag;
            ActiveMembers = activeMembers;
        }

        /// <summary>
        /// Getter for id
        /// </summary>
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        /// <summary>
        /// Getter for name
        /// </summary>
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        /// <summary>
        /// Getter for createdTime
        /// </summary>
        [JsonConverter(typeof(IsoDateTimeConverter))]
        [JsonProperty("createdTime", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? CreatedTime { get; set; }

        /// <summary>
        /// Getter for completedTime
        /// </summary>
        [JsonConverter(typeof(IsoDateTimeConverter))]
        [JsonProperty("completedTime", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? CompletedTime { get; set; }

        /// <summary>
        /// Getter for conferenceEventUrl
        /// </summary>
        [JsonProperty("conferenceEventUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string ConferenceEventUrl { get; set; }

        /// <summary>
        /// Getter for conferenceEventMethod
        /// </summary>
        [JsonProperty("conferenceEventMethod", ItemConverterType = typeof(StringValuedEnumConverter), NullValueHandling = NullValueHandling.Ignore)]
        public Models.ConferenceEventMethodEnum? ConferenceEventMethod { get; set; }

        /// <summary>
        /// Getter for tag
        /// </summary>
        [JsonProperty("tag", NullValueHandling = NullValueHandling.Ignore)]
        public string Tag { get; set; }

        /// <summary>
        /// Getter for activeMembers
        /// </summary>
        [JsonProperty("activeMembers", NullValueHandling = NullValueHandling.Ignore)]
        public List<Models.ConferenceMemberDetail> ActiveMembers { get; set; }

    }
}