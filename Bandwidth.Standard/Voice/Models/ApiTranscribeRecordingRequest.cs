/*
 * Bandwidth.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Bandwidth.Standard;
using Bandwidth.Standard.Utilities;

namespace Bandwidth.Standard.Voice.Models
{
    public class ApiTranscribeRecordingRequest 
    {
        public ApiTranscribeRecordingRequest() { }

        public ApiTranscribeRecordingRequest(string callbackUrl = null,
            Models.CallbackMethodEnum? callbackMethod = null,
            string username = null,
            string password = null,
            string tag = null,
            double? callbackTimeout = null)
        {
            CallbackUrl = callbackUrl;
            CallbackMethod = callbackMethod;
            Username = username;
            Password = password;
            Tag = tag;
            CallbackTimeout = callbackTimeout;
        }

        /// <summary>
        /// Getter for callbackUrl
        /// </summary>
        [JsonProperty("callbackUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string CallbackUrl { get; set; }

        /// <summary>
        /// Getter for callbackMethod
        /// </summary>
        [JsonProperty("callbackMethod", ItemConverterType = typeof(StringValuedEnumConverter), NullValueHandling = NullValueHandling.Ignore)]
        public Models.CallbackMethodEnum? CallbackMethod { get; set; }

        /// <summary>
        /// Getter for username
        /// </summary>
        [JsonProperty("username", NullValueHandling = NullValueHandling.Ignore)]
        public string Username { get; set; }

        /// <summary>
        /// Getter for password
        /// </summary>
        [JsonProperty("password", NullValueHandling = NullValueHandling.Ignore)]
        public string Password { get; set; }

        /// <summary>
        /// Getter for tag
        /// </summary>
        [JsonProperty("tag", NullValueHandling = NullValueHandling.Ignore)]
        public string Tag { get; set; }

        /// <summary>
        /// Getter for callbackTimeout
        /// </summary>
        [JsonProperty("callbackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        public double? CallbackTimeout { get; set; }

    }
}