/*
 * Bandwidth.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Bandwidth.Standard;
using Bandwidth.Standard.Utilities;

namespace Bandwidth.Standard.Messaging.Models
{
    public class Media 
    {
        public Media() { }

        public Media(string content = null,
            int? contentLength = null,
            string mediaName = null)
        {
            Content = content;
            ContentLength = contentLength;
            MediaName = mediaName;
        }

        /// <summary>
        /// Getter for content
        /// </summary>
        [JsonProperty("content", NullValueHandling = NullValueHandling.Ignore)]
        public string Content { get; set; }

        /// <summary>
        /// Getter for contentLength
        /// </summary>
        [JsonProperty("contentLength", NullValueHandling = NullValueHandling.Ignore)]
        public int? ContentLength { get; set; }

        /// <summary>
        /// Getter for mediaName
        /// </summary>
        [JsonProperty("mediaName", NullValueHandling = NullValueHandling.Ignore)]
        public string MediaName { get; set; }

        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"Media : ({string.Join(", ", toStringOutput)})";
        }

        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"Content = {(Content == null ? "null" : Content == string.Empty ? "" : Content)}");
            toStringOutput.Add($"ContentLength = {(ContentLength == null ? "null" : ContentLength.ToString())}");
            toStringOutput.Add($"MediaName = {(MediaName == null ? "null" : MediaName == string.Empty ? "" : MediaName)}");
        }

        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }

            return obj is Media other &&
                ((Content == null && other.Content == null) || (Content?.Equals(other.Content) == true)) &&
                ((ContentLength == null && other.ContentLength == null) || (ContentLength?.Equals(other.ContentLength) == true)) &&
                ((MediaName == null && other.MediaName == null) || (MediaName?.Equals(other.MediaName) == true));
        }

        public override int GetHashCode()
        {
            int hashCode = 457305241;

            if (Content != null)
            {
               hashCode += Content.GetHashCode();
            }

            if (ContentLength != null)
            {
               hashCode += ContentLength.GetHashCode();
            }

            if (MediaName != null)
            {
               hashCode += MediaName.GetHashCode();
            }

            return hashCode;
        }

    }
}