/*
 * Bandwidth.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Bandwidth.Standard;
using Bandwidth.Standard.Utilities;

namespace Bandwidth.Standard.Messaging.Models
{
    public class BandwidthMessagesList 
    {
        public BandwidthMessagesList() { }

        public BandwidthMessagesList(int? totalCount = null,
            Models.PageInfo pageInfo = null,
            List<Models.BandwidthMessageItem> messages = null)
        {
            TotalCount = totalCount;
            PageInfo = pageInfo;
            Messages = messages;
        }

        /// <summary>
        /// Total number of messages matched by the search
        /// </summary>
        [JsonProperty("totalCount", NullValueHandling = NullValueHandling.Ignore)]
        public int? TotalCount { get; set; }

        /// <summary>
        /// Getter for pageInfo
        /// </summary>
        [JsonProperty("pageInfo", NullValueHandling = NullValueHandling.Ignore)]
        public Models.PageInfo PageInfo { get; set; }

        /// <summary>
        /// Getter for messages
        /// </summary>
        [JsonProperty("messages", NullValueHandling = NullValueHandling.Ignore)]
        public List<Models.BandwidthMessageItem> Messages { get; set; }

        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"BandwidthMessagesList : ({string.Join(", ", toStringOutput)})";
        }

        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"TotalCount = {(TotalCount == null ? "null" : TotalCount.ToString())}");
            toStringOutput.Add($"PageInfo = {(PageInfo == null ? "null" : PageInfo.ToString())}");
            toStringOutput.Add($"Messages = {(Messages == null ? "null" : $"[{ string.Join(", ", Messages)} ]")}");
        }

        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }

            return obj is BandwidthMessagesList other &&
                ((TotalCount == null && other.TotalCount == null) || (TotalCount?.Equals(other.TotalCount) == true)) &&
                ((PageInfo == null && other.PageInfo == null) || (PageInfo?.Equals(other.PageInfo) == true)) &&
                ((Messages == null && other.Messages == null) || (Messages?.Equals(other.Messages) == true));
        }

        public override int GetHashCode()
        {
            int hashCode = 23261715;

            if (TotalCount != null)
            {
               hashCode += TotalCount.GetHashCode();
            }

            if (PageInfo != null)
            {
               hashCode += PageInfo.GetHashCode();
            }

            if (Messages != null)
            {
               hashCode += Messages.GetHashCode();
            }

            return hashCode;
        }

    }
}