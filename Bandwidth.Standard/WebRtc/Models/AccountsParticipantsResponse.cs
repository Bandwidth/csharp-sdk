/*
 * Bandwidth.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Bandwidth.Standard;
using Bandwidth.Standard.Utilities;

namespace Bandwidth.Standard.WebRtc.Models
{
    public class AccountsParticipantsResponse 
    {
        public AccountsParticipantsResponse() { }

        public AccountsParticipantsResponse(Models.Participant participant = null,
            string token = null)
        {
            Participant = participant;
            Token = token;
        }

        /// <summary>
        /// A participant object
        /// </summary>
        [JsonProperty("participant", NullValueHandling = NullValueHandling.Ignore)]
        public Models.Participant Participant { get; set; }

        /// <summary>
        /// Auth token for the returned participant
        /// This should be passed to the participant so that they can connect to the platform
        /// </summary>
        [JsonProperty("token", NullValueHandling = NullValueHandling.Ignore)]
        public string Token { get; set; }

        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"AccountsParticipantsResponse : ({string.Join(", ", toStringOutput)})";
        }

        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"Participant = {(Participant == null ? "null" : Participant.ToString())}");
            toStringOutput.Add($"Token = {(Token == null ? "null" : Token == string.Empty ? "" : Token)}");
        }

        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }

            return obj is AccountsParticipantsResponse other &&
                ((Participant == null && other.Participant == null) || (Participant?.Equals(other.Participant) == true)) &&
                ((Token == null && other.Token == null) || (Token?.Equals(other.Token) == true));
        }

        public override int GetHashCode()
        {
            int hashCode = -815453959;

            if (Participant != null)
            {
               hashCode += Participant.GetHashCode();
            }

            if (Token != null)
            {
               hashCode += Token.GetHashCode();
            }

            return hashCode;
        }

    }
}