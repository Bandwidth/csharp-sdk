/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Bandwidth.Standard.Client.OpenAPIDateConverter;

namespace Bandwidth.Standard.Model
{
    /// <summary>
    /// CallTranscriptionMetadata
    /// </summary>
    [DataContract(Name = "callTranscriptionMetadata")]
    public partial class CallTranscriptionMetadata : IEquatable<CallTranscriptionMetadata>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CallTranscriptionMetadata" /> class.
        /// </summary>
        /// <param name="transcriptionId">The programmable voice API transcription ID..</param>
        /// <param name="transcriptionName">The programmable voice API transcription name. This name could be provided by the user when creating the transcription..</param>
        /// <param name="transcriptionUrl">A URL that may be used to retrieve the transcription itself. This points to the [Get Call Transcription](/apis/voice/#operation/getCallTranscription) endpoint..</param>
        public CallTranscriptionMetadata(string transcriptionId = default(string), string transcriptionName = default(string), string transcriptionUrl = default(string))
        {
            this.TranscriptionId = transcriptionId;
            this.TranscriptionName = transcriptionName;
            this.TranscriptionUrl = transcriptionUrl;
        }

        /// <summary>
        /// The programmable voice API transcription ID.
        /// </summary>
        /// <value>The programmable voice API transcription ID.</value>
        /// <example>t-3f758f24-c7a2fc78-7c91-401a-8b2e-e542f9c40d6b</example>
        [DataMember(Name = "transcriptionId", EmitDefaultValue = false)]
        public string TranscriptionId { get; set; }

        /// <summary>
        /// The programmable voice API transcription name. This name could be provided by the user when creating the transcription.
        /// </summary>
        /// <value>The programmable voice API transcription name. This name could be provided by the user when creating the transcription.</value>
        /// <example>live_transcription</example>
        [DataMember(Name = "transcriptionName", EmitDefaultValue = false)]
        public string TranscriptionName { get; set; }

        /// <summary>
        /// A URL that may be used to retrieve the transcription itself. This points to the [Get Call Transcription](/apis/voice/#operation/getCallTranscription) endpoint.
        /// </summary>
        /// <value>A URL that may be used to retrieve the transcription itself. This points to the [Get Call Transcription](/apis/voice/#operation/getCallTranscription) endpoint.</value>
        /// <example>https://voice.bandwidth.com/api/v2/accounts/9900000/calls/c-fef240ff-5cfc9091-8069-4863-a8c0-a4dcbbf1f1a4/transcriptions/t-3f758f24-c7a2fc78-7c91-401a-8b2e-e542f9c40d6b</example>
        [DataMember(Name = "transcriptionUrl", EmitDefaultValue = false)]
        public string TranscriptionUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CallTranscriptionMetadata {\n");
            sb.Append("  TranscriptionId: ").Append(TranscriptionId).Append("\n");
            sb.Append("  TranscriptionName: ").Append(TranscriptionName).Append("\n");
            sb.Append("  TranscriptionUrl: ").Append(TranscriptionUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CallTranscriptionMetadata);
        }

        /// <summary>
        /// Returns true if CallTranscriptionMetadata instances are equal
        /// </summary>
        /// <param name="input">Instance of CallTranscriptionMetadata to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallTranscriptionMetadata input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.TranscriptionId == input.TranscriptionId ||
                    (this.TranscriptionId != null &&
                    this.TranscriptionId.Equals(input.TranscriptionId))
                ) && 
                (
                    this.TranscriptionName == input.TranscriptionName ||
                    (this.TranscriptionName != null &&
                    this.TranscriptionName.Equals(input.TranscriptionName))
                ) && 
                (
                    this.TranscriptionUrl == input.TranscriptionUrl ||
                    (this.TranscriptionUrl != null &&
                    this.TranscriptionUrl.Equals(input.TranscriptionUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TranscriptionId != null)
                {
                    hashCode = (hashCode * 59) + this.TranscriptionId.GetHashCode();
                }
                if (this.TranscriptionName != null)
                {
                    hashCode = (hashCode * 59) + this.TranscriptionName.GetHashCode();
                }
                if (this.TranscriptionUrl != null)
                {
                    hashCode = (hashCode * 59) + this.TranscriptionUrl.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
