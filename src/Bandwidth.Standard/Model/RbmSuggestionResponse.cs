/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Bandwidth.Standard.Client.OpenAPIDateConverter;

namespace Bandwidth.Standard.Model
{
    /// <summary>
    /// RbmSuggestionResponse
    /// </summary>
    [DataContract(Name = "rbmSuggestionResponse")]
    public partial class RbmSuggestionResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RbmSuggestionResponse" /> class.
        /// </summary>
        /// <param name="text">The text associated with the suggestion response..</param>
        /// <param name="postbackData">Base64 payload the customer receives when the reply is clicked..</param>
        public RbmSuggestionResponse(string text = default(string), byte[] postbackData = default(byte[]))
        {
            this.Text = text;
            this.PostbackData = postbackData;
        }

        /// <summary>
        /// The text associated with the suggestion response.
        /// </summary>
        /// <value>The text associated with the suggestion response.</value>
        /// <example>Yes, I would like to proceed</example>
        [DataMember(Name = "text", EmitDefaultValue = false)]
        public string Text { get; set; }

        /// <summary>
        /// Base64 payload the customer receives when the reply is clicked.
        /// </summary>
        /// <value>Base64 payload the customer receives when the reply is clicked.</value>
        /// <example>[B@40cb95c1</example>
        [DataMember(Name = "postbackData", EmitDefaultValue = false)]
        public byte[] PostbackData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RbmSuggestionResponse {\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  PostbackData: ").Append(PostbackData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PostbackData (byte[]) maxLength
            if (this.PostbackData != null && this.PostbackData.Length > 2048)
            {
                yield return new ValidationResult("Invalid value for PostbackData, length must be less than 2048.", new [] { "PostbackData" });
            }

            yield break;
        }
    }

}
