/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Bandwidth.Standard.Client.OpenAPIDateConverter;

namespace Bandwidth.Standard.Model
{
    /// <summary>
    /// MmsMessageContentFile
    /// </summary>
    [DataContract(Name = "mmsMessageContentFile")]
    public partial class MmsMessageContentFile : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MmsMessageContentFile" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MmsMessageContentFile() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MmsMessageContentFile" /> class.
        /// </summary>
        /// <param name="fileUrl">The URL of a media attachment.  For MMS, the API limits file size to 3.5MB. Specific carriers and channels may have a smaller limit that could cause a large file to fail, see [here](https://support.bandwidth.com/hc/en-us/articles/360014235473-What-are-the-MMS-file-size-limits) for more details. (required).</param>
        public MmsMessageContentFile(string fileUrl = default(string))
        {
            // to ensure "fileUrl" is required (not null)
            if (fileUrl == null)
            {
                throw new ArgumentNullException("fileUrl is a required property for MmsMessageContentFile and cannot be null");
            }
            this.FileUrl = fileUrl;
        }

        /// <summary>
        /// The URL of a media attachment.  For MMS, the API limits file size to 3.5MB. Specific carriers and channels may have a smaller limit that could cause a large file to fail, see [here](https://support.bandwidth.com/hc/en-us/articles/360014235473-What-are-the-MMS-file-size-limits) for more details.
        /// </summary>
        /// <value>The URL of a media attachment.  For MMS, the API limits file size to 3.5MB. Specific carriers and channels may have a smaller limit that could cause a large file to fail, see [here](https://support.bandwidth.com/hc/en-us/articles/360014235473-What-are-the-MMS-file-size-limits) for more details.</value>
        /// <example>https://dev.bandwidth.com/images/bandwidth-logo.png</example>
        [DataMember(Name = "fileUrl", IsRequired = true, EmitDefaultValue = true)]
        public string FileUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MmsMessageContentFile {\n");
            sb.Append("  FileUrl: ").Append(FileUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FileUrl (string) maxLength
            if (this.FileUrl != null && this.FileUrl.Length > 1000)
            {
                yield return new ValidationResult("Invalid value for FileUrl, length must be less than 1000.", new [] { "FileUrl" });
            }

            yield break;
        }
    }

}
