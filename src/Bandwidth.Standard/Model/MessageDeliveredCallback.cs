/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Bandwidth.Standard.Client.OpenAPIDateConverter;

namespace Bandwidth.Standard.Model
{
    /// <summary>
    /// Message Delivered Callback
    /// </summary>
    [DataContract(Name = "messageDeliveredCallback")]
    public partial class MessageDeliveredCallback : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageDeliveredCallback" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MessageDeliveredCallback() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageDeliveredCallback" /> class.
        /// </summary>
        /// <param name="time">time (required).</param>
        /// <param name="type">type (required).</param>
        /// <param name="to">to (required).</param>
        /// <param name="description">description (required).</param>
        /// <param name="message">message (required).</param>
        public MessageDeliveredCallback(DateTime time = default(DateTime), string type = default(string), string to = default(string), string description = default(string), MessageDeliveredCallbackMessage message = default(MessageDeliveredCallbackMessage))
        {
            this.Time = time;
            // to ensure "type" is required (not null)
            if (type == null)
            {
                throw new ArgumentNullException("type is a required property for MessageDeliveredCallback and cannot be null");
            }
            this.Type = type;
            // to ensure "to" is required (not null)
            if (to == null)
            {
                throw new ArgumentNullException("to is a required property for MessageDeliveredCallback and cannot be null");
            }
            this.To = to;
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new ArgumentNullException("description is a required property for MessageDeliveredCallback and cannot be null");
            }
            this.Description = description;
            // to ensure "message" is required (not null)
            if (message == null)
            {
                throw new ArgumentNullException("message is a required property for MessageDeliveredCallback and cannot be null");
            }
            this.Message = message;
        }

        /// <summary>
        /// Gets or Sets Time
        /// </summary>
        /// <example>2016-09-14T18:20:16Z</example>
        [DataMember(Name = "time", IsRequired = true, EmitDefaultValue = true)]
        public DateTime Time { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        /// <example>message-delivered</example>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets To
        /// </summary>
        /// <example>+15552223333</example>
        [DataMember(Name = "to", IsRequired = true, EmitDefaultValue = true)]
        public string To { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        /// <example>Message delivered to carrier.</example>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", IsRequired = true, EmitDefaultValue = true)]
        public MessageDeliveredCallbackMessage Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MessageDeliveredCallback {\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
