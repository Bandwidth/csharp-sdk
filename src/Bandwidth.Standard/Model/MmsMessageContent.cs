/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Bandwidth.Standard.Client.OpenAPIDateConverter;

namespace Bandwidth.Standard.Model
{
    /// <summary>
    /// MmsMessageContent
    /// </summary>
    [DataContract(Name = "mmsMessageContent")]
    public partial class MmsMessageContent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MmsMessageContent" /> class.
        /// </summary>
        /// <param name="text">The contents of the text message. Must be 2048 characters or less..</param>
        /// <param name="media">A list of URLs to include as media attachments as part of the message. Each URL can be at most 4096 characters..</param>
        public MmsMessageContent(string text = default(string), List<string> media = default(List<string>))
        {
            this.Text = text;
            this.Media = media;
        }

        /// <summary>
        /// The contents of the text message. Must be 2048 characters or less.
        /// </summary>
        /// <value>The contents of the text message. Must be 2048 characters or less.</value>
        /// <example>Hello world</example>
        [DataMember(Name = "text", EmitDefaultValue = false)]
        public string Text { get; set; }

        /// <summary>
        /// A list of URLs to include as media attachments as part of the message. Each URL can be at most 4096 characters.
        /// </summary>
        /// <value>A list of URLs to include as media attachments as part of the message. Each URL can be at most 4096 characters.</value>
        /// <example>[&quot;https://dev.bandwidth.com/images/bandwidth-logo.png&quot;,&quot;https://dev.bandwidth.com/images/github_logo.png&quot;]</example>
        [DataMember(Name = "media", EmitDefaultValue = false)]
        public List<string> Media { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MmsMessageContent {\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  Media: ").Append(Media).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Text (string) maxLength
            if (this.Text != null && this.Text.Length > 2048)
            {
                yield return new ValidationResult("Invalid value for Text, length must be less than 2048.", new [] { "Text" });
            }

            yield break;
        }
    }

}
