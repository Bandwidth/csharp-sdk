/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Api;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Model
{
    /// <summary>
    ///  Class for testing CreateParticipantRequest
    /// </summary>
    public class CreateParticipantRequestTests : IDisposable
    {
        private CreateParticipantRequest instance;

        public CreateParticipantRequestTests()
        {
            instance = new CreateParticipantRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreateParticipantRequest
        /// </summary>
        [Fact]
        public void CreateParticipantRequestInstanceTest()
        {
            Assert.IsType<CreateParticipantRequest>(instance);
        }


        /// <summary>
        /// Test the property 'CallbackUrl'
        /// </summary>
        [Fact]
        public void CallbackUrlTest()
        {
            instance.CallbackUrl = "https://test.com";
            Assert.IsType<string>(instance.CallbackUrl);
            Assert.Equal("https://test.com", instance.CallbackUrl);
        }
        /// <summary>
        /// Test the property 'PublishPermissions'
        /// </summary>
        [Fact]
        public void PublishPermissionsTest()
        {
            instance.PublishPermissions = new List<PublishPermissionsEnum> { PublishPermissionsEnum.AUDIO};
            Assert.IsType<List<PublishPermissionsEnum>>(instance.PublishPermissions);
            Assert.Equal(new List<PublishPermissionsEnum> { PublishPermissionsEnum.AUDIO }, instance.PublishPermissions);
        }
        /// <summary>
        /// Test the property 'Tag'
        /// </summary>
        [Fact]
        public void TagTest()
        {
            instance.Tag = "test";
            Assert.IsType<string>(instance.Tag);
            Assert.Equal("test", instance.Tag);
        }
        /// <summary>
        /// Test the property 'DeviceApiVersion'
        /// </summary>
        [Fact]
        public void DeviceApiVersionTest()
        {
            instance.DeviceApiVersion = DeviceApiVersionEnum.V3;
            Assert.IsType<DeviceApiVersionEnum?>(instance.DeviceApiVersion);
            Assert.Equal(DeviceApiVersionEnum.V3, instance.DeviceApiVersion);
        }
    }
}
