/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Model
{
    /// <summary>
    ///  Class for testing UpdateConferenceMember
    /// </summary>
    public class UpdateConferenceMemberTests : IDisposable
    {
        private UpdateConferenceMember instance;

        public UpdateConferenceMemberTests()
        {
            instance = new UpdateConferenceMember();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UpdateConferenceMember
        /// </summary>
        [Fact]
        public void UpdateConferenceMemberInstanceTest()
        {
            Assert.IsType<UpdateConferenceMember>(instance);
        }


        /// <summary>
        /// Test the property 'Mute'
        /// </summary>
        [Fact]
        public void MuteTest()
        {
            instance.Mute = true;
            Assert.IsType<bool>(instance.Mute);
            Assert.True(instance.Mute);
        }
        /// <summary>
        /// Test the property 'Hold'
        /// </summary>
        [Fact]
        public void HoldTest()
        {
            instance.Hold = true;
            Assert.IsType<bool>(instance.Hold);
            Assert.True(instance.Hold);
        }
        /// <summary>
        /// Test the property 'CallIdsToCoach'
        /// </summary>
        [Fact]
        public void CallIdsToCoachTest()
        {
            instance.CallIdsToCoach = new List<string> { "callId1", "callId2" };
            Assert.IsType<List<string>>(instance.CallIdsToCoach);
            Assert.Equal(new List<string> { "callId1", "callId2" }, instance.CallIdsToCoach);
        }

    }

}
