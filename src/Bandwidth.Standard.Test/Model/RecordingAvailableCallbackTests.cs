/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Model
{
    /// <summary>
    ///  Class for testing RecordingAvailableCallback
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RecordingAvailableCallbackTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RecordingAvailableCallback
        //private RecordingAvailableCallback instance;

        public RecordingAvailableCallbackTests()
        {
            // TODO uncomment below to create an instance of RecordingAvailableCallback
            //instance = new RecordingAvailableCallback();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RecordingAvailableCallback
        /// </summary>
        [Fact]
        public void RecordingAvailableCallbackInstanceTest()
        {
            // TODO uncomment below to test "IsType" RecordingAvailableCallback
            //Assert.IsType<RecordingAvailableCallback>(instance);
        }

        /// <summary>
        /// Test the property 'EventType'
        /// </summary>
        [Fact]
        public void EventTypeTest()
        {
            // TODO unit test for the property 'EventType'
        }

        /// <summary>
        /// Test the property 'EventTime'
        /// </summary>
        [Fact]
        public void EventTimeTest()
        {
            // TODO unit test for the property 'EventTime'
        }

        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }

        /// <summary>
        /// Test the property 'ApplicationId'
        /// </summary>
        [Fact]
        public void ApplicationIdTest()
        {
            // TODO unit test for the property 'ApplicationId'
        }

        /// <summary>
        /// Test the property 'From'
        /// </summary>
        [Fact]
        public void FromTest()
        {
            // TODO unit test for the property 'From'
        }

        /// <summary>
        /// Test the property 'To'
        /// </summary>
        [Fact]
        public void ToTest()
        {
            // TODO unit test for the property 'To'
        }

        /// <summary>
        /// Test the property 'Direction'
        /// </summary>
        [Fact]
        public void DirectionTest()
        {
            // TODO unit test for the property 'Direction'
        }

        /// <summary>
        /// Test the property 'CallId'
        /// </summary>
        [Fact]
        public void CallIdTest()
        {
            // TODO unit test for the property 'CallId'
        }

        /// <summary>
        /// Test the property 'CallUrl'
        /// </summary>
        [Fact]
        public void CallUrlTest()
        {
            // TODO unit test for the property 'CallUrl'
        }

        /// <summary>
        /// Test the property 'ParentCallId'
        /// </summary>
        [Fact]
        public void ParentCallIdTest()
        {
            // TODO unit test for the property 'ParentCallId'
        }

        /// <summary>
        /// Test the property 'RecordingId'
        /// </summary>
        [Fact]
        public void RecordingIdTest()
        {
            // TODO unit test for the property 'RecordingId'
        }

        /// <summary>
        /// Test the property 'MediaUrl'
        /// </summary>
        [Fact]
        public void MediaUrlTest()
        {
            // TODO unit test for the property 'MediaUrl'
        }

        /// <summary>
        /// Test the property 'EnqueuedTime'
        /// </summary>
        [Fact]
        public void EnqueuedTimeTest()
        {
            // TODO unit test for the property 'EnqueuedTime'
        }

        /// <summary>
        /// Test the property 'StartTime'
        /// </summary>
        [Fact]
        public void StartTimeTest()
        {
            // TODO unit test for the property 'StartTime'
        }

        /// <summary>
        /// Test the property 'EndTime'
        /// </summary>
        [Fact]
        public void EndTimeTest()
        {
            // TODO unit test for the property 'EndTime'
        }

        /// <summary>
        /// Test the property 'Duration'
        /// </summary>
        [Fact]
        public void DurationTest()
        {
            // TODO unit test for the property 'Duration'
        }

        /// <summary>
        /// Test the property 'FileFormat'
        /// </summary>
        [Fact]
        public void FileFormatTest()
        {
            // TODO unit test for the property 'FileFormat'
        }

        /// <summary>
        /// Test the property 'Channels'
        /// </summary>
        [Fact]
        public void ChannelsTest()
        {
            // TODO unit test for the property 'Channels'
        }

        /// <summary>
        /// Test the property 'Tag'
        /// </summary>
        [Fact]
        public void TagTest()
        {
            // TODO unit test for the property 'Tag'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'TransferCallerId'
        /// </summary>
        [Fact]
        public void TransferCallerIdTest()
        {
            // TODO unit test for the property 'TransferCallerId'
        }

        /// <summary>
        /// Test the property 'TransferTo'
        /// </summary>
        [Fact]
        public void TransferToTest()
        {
            // TODO unit test for the property 'TransferTo'
        }
    }
}
