/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Model
{
    /// <summary>
    ///  Class for testing MessagesList
    /// </summary>
    public class MessagesListTests : IDisposable
    {
        private MessagesList instance;

        public MessagesListTests()
        {
            instance = new MessagesList();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessagesList
        /// </summary>
        [Fact]
        public void MessagesListInstanceTest()
        {
            Assert.IsType<MessagesList>(instance);
        }


        /// <summary>
        /// Test the property 'TotalCount'
        /// </summary>
        [Fact]
        public void TotalCountTest()
        {
            instance.TotalCount = 100;
            Assert.IsType<int>(instance.TotalCount);
            Assert.Equal(100, instance.TotalCount);
        }
        /// <summary>
        /// Test the property 'PageInfo'
        /// </summary>
        [Fact]
        public void PageInfoTest()
        {
            instance.PageInfo = new PageInfo();
            Assert.IsType<PageInfo>(instance.PageInfo);
            Assert.Equal(new PageInfo(), instance.PageInfo);
        }
        /// <summary>
        /// Test the property 'Messages'
        /// </summary>
        [Fact]
        public void MessagesTest()
        {
            instance.Messages = new List<ListMessageItem>();
            Assert.IsType<List<ListMessageItem>>(instance.Messages);
            Assert.Equal(new List<ListMessageItem>(), instance.Messages);
        }

    }

}
