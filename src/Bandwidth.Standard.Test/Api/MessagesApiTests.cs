/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Bandwidth.Standard.Client;
using Bandwidth.Standard.Api;
// uncomment below to import models
//using Bandwidth.Standard.Model;

namespace Bandwidth.Standard.Test.Api
{
    /// <summary>
    ///  Class for testing MessagesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MessagesApiTests : IDisposable
    {
        private MessagesApi instance;

        public MessagesApiTests()
        {
            instance = new MessagesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessagesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MessagesApi
            //Assert.IsType<MessagesApi>(instance);
        }

        /// <summary>
        /// Test CreateMessage
        /// </summary>
        [Fact]
        public void CreateMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //MessageRequest messageRequest = null;
            //var response = instance.CreateMessage(accountId, messageRequest);
            //Assert.IsType<Message>(response);
        }

        /// <summary>
        /// Test ListMessages
        /// </summary>
        [Fact]
        public void ListMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string messageId = null;
            //string sourceTn = null;
            //string destinationTn = null;
            //MessageStatusEnum? messageStatus = null;
            //ListMessageDirectionEnum? messageDirection = null;
            //string carrierName = null;
            //MessageTypeEnum? messageType = null;
            //int? errorCode = null;
            //string fromDateTime = null;
            //string toDateTime = null;
            //string campaignId = null;
            //string sort = null;
            //string pageToken = null;
            //int? limit = null;
            //bool? limitTotalCount = null;
            //Region? region = null;
            //var response = instance.ListMessages(accountId, messageId, sourceTn, destinationTn, messageStatus, messageDirection, carrierName, messageType, errorCode, fromDateTime, toDateTime, campaignId, sort, pageToken, limit, limitTotalCount, region);
            //Assert.IsType<MessagesList>(response);
        }
    }
}
