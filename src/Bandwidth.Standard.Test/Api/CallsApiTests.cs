/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Bandwidth.Standard.Client;
using Bandwidth.Standard.Api;
// uncomment below to import models
//using Bandwidth.Standard.Model;

namespace Bandwidth.Standard.Test.Api
{
    /// <summary>
    ///  Class for testing CallsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CallsApiTests : IDisposable
    {
        private CallsApi instance;

        public CallsApiTests()
        {
            instance = new CallsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CallsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CallsApi
            //Assert.IsType<CallsApi>(instance);
        }

        /// <summary>
        /// Test CreateCall
        /// </summary>
        [Fact]
        public void CreateCallTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //CreateCall createCall = null;
            //var response = instance.CreateCall(accountId, createCall);
            //Assert.IsType<CreateCallResponse>(response);
        }

        /// <summary>
        /// Test GetCallState
        /// </summary>
        [Fact]
        public void GetCallStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string callId = null;
            //var response = instance.GetCallState(accountId, callId);
            //Assert.IsType<CallState>(response);
        }

        /// <summary>
        /// Test UpdateCall
        /// </summary>
        [Fact]
        public void UpdateCallTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string callId = null;
            //UpdateCall updateCall = null;
            //instance.UpdateCall(accountId, callId, updateCall);
        }

        /// <summary>
        /// Test UpdateCallBxml
        /// </summary>
        [Fact]
        public void UpdateCallBxmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string callId = null;
            //string body = null;
            //instance.UpdateCallBxml(accountId, callId, body);
        }
    }
}
