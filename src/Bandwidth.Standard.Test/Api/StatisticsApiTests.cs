/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Bandwidth.Standard.Client;
using Bandwidth.Standard.Api;
using Bandwidth.Standard.Model;
using Moq;
using System.Net;

namespace Bandwidth.Standard.Test.Api
{
    /// <summary>
    ///  Class for testing StatisticsApi
    /// </summary>
    public class StatisticsApiTests : IDisposable
    {
        private StatisticsApi instance;
        private Mock<ISynchronousClient> mockClient;
        private Mock<IAsynchronousClient> mockAsynchronousClient;
        private Configuration fakeConfiguration;

        public StatisticsApiTests()
        {
            mockClient = new Mock<ISynchronousClient>();
            mockAsynchronousClient = new Mock<IAsynchronousClient>();
            fakeConfiguration = new Configuration();
            fakeConfiguration.BasePath = "https://numbers.bandwidth.com/api/v1";
            fakeConfiguration.Username = "username";
            fakeConfiguration.Password = "password";
            instance = new StatisticsApi(mockClient.Object, mockAsynchronousClient.Object, fakeConfiguration);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StatisticsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            Assert.IsType<StatisticsApi>(instance);
        }

        /// <summary>
        /// Test GetStatistics
        /// </summary>
        [Fact]
        public void GetStatisticsTest()
        {
            string accountId = "9900000";
            var accountStatistics = new AccountStatistics(0, 900);

            var apiResponse = new ApiResponse<AccountStatistics>(HttpStatusCode.OK, accountStatistics);
            mockClient.Setup(x => x.Get<AccountStatistics>("/accounts/{accountId}/statistics", It.IsAny<RequestOptions>(), fakeConfiguration)).Returns(apiResponse);
            var response = instance.GetStatisticsWithHttpInfo(accountId);

            Assert.IsType<ApiResponse<AccountStatistics>>(response);
            Assert.Equal(HttpStatusCode.OK, response.StatusCode);
        }
    }
}
