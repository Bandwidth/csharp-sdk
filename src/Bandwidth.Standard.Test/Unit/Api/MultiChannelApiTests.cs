/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Bandwidth.Standard.Client;
using Bandwidth.Standard.Api;
// uncomment below to import models
//using Bandwidth.Standard.Model;

namespace Bandwidth.Standard.Test.Unit.Api
{
    /// <summary>
    ///  Class for testing MultiChannelApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MultiChannelApiTests : IDisposable
    {
        private MultiChannelApi instance;

        public MultiChannelApiTests()
        {
            instance = new MultiChannelApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MultiChannelApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MultiChannelApi
            //Assert.IsType<MultiChannelApi>(instance);
        }

        /// <summary>
        /// Test CreateMultiChannelMessage
        /// </summary>
        [Fact]
        public void CreateMultiChannelMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //MultiChannelMessageRequest multiChannelMessageRequest = null;
            //var response = instance.CreateMultiChannelMessage(accountId, multiChannelMessageRequest);
            //Assert.IsType<CreateMultiChannelMessageResponse>(response);
        }
    }
}
