/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Unit.Model
{
    /// <summary>
    ///  Class for testing Address
    /// </summary>
    public class AddressTests : IDisposable
    {
        private Address instance;

        public AddressTests()
        {
            instance = new Address(
                name: "name",
                addr1: "addr1",
                addr2: "addr2",
                city: "city",
                state: "state",
                zip: "zip",
                url: "url"
            );
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Address
        /// </summary>
        [Fact]
        public void AddressInstanceTest()
        {
            Assert.IsType<Address>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            Assert.IsType<string>(instance.Name);
            Assert.Equal("name", instance.Name);
        }

        /// <summary>
        /// Test the property 'Addr1'
        /// </summary>
        [Fact]
        public void Addr1Test()
        {
            Assert.IsType<string>(instance.Addr1);
            Assert.Equal("addr1", instance.Addr1);
        }

        /// <summary>
        /// Test the property 'Addr2'
        /// </summary>
        [Fact]
        public void Addr2Test()
        {
            Assert.IsType<string>(instance.Addr2);
            Assert.Equal("addr2", instance.Addr2);
        }

        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Fact]
        public void CityTest()
        {
            Assert.IsType<string>(instance.City);
            Assert.Equal("city", instance.City);
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            Assert.IsType<string>(instance.State);
            Assert.Equal("state", instance.State);
        }

        /// <summary>
        /// Test the property 'Zip'
        /// </summary>
        [Fact]
        public void ZipTest()
        {
            Assert.IsType<string>(instance.Zip);
            Assert.Equal("zip", instance.Zip);
        }

        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            Assert.IsType<string>(instance.Url);
            Assert.Equal("url", instance.Url);
        }
    }
}
