/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Unit.Model
{
    /// <summary>
    ///  Class for testing MultiChannelChannelListObject
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MultiChannelChannelListObjectTests : IDisposable
    {
        private MultiChannelChannelListObject instance;

        public MultiChannelChannelListObjectTests()
        {
            instance = new MultiChannelChannelListObject(
                from: "TestFrom",
                applicationId: "TestApplicationId",
                channel: MultiChannelMessageChannelEnum.SMS,
                content: new MultiChannelChannelListObjectContent(new RbmMessageMedia(
                    media: new RbmMessageContentFile(
                        fileUrl: "https://test.url/",
                        thumbnailUrl: "https://test.url/"
                    ),
                    suggestions: new List<MultiChannelAction>(){
                        new MultiChannelAction(new RbmActionBase(
                            type: RbmActionTypeEnum.REPLY,
                            text: "Test",
                            postbackData: new byte[] { 1, 2, 3 }
                        ))
                    }
                ))
            );
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MultiChannelChannelListObject
        /// </summary>
        [Fact]
        public void MultiChannelChannelListObjectInstanceTest()
        {
            Assert.IsType<MultiChannelChannelListObject>(instance);
        }

        /// <summary>
        /// Test the property 'From'
        /// </summary>
        [Fact]
        public void FromTest()
        {
            Assert.IsType<string>(instance.From);
            Assert.Equal("TestFrom", instance.From);
        }

        /// <summary>
        /// Test the property 'ApplicationId'
        /// </summary>
        [Fact]
        public void ApplicationIdTest()
        {
            Assert.IsType<string>(instance.ApplicationId);
            Assert.Equal("TestApplicationId", instance.ApplicationId);
        }

        /// <summary>
        /// Test the property 'Channel'
        /// </summary>
        [Fact]
        public void ChannelTest()
        {
            Assert.IsType<MultiChannelMessageChannelEnum>(instance.Channel);
            Assert.Equal(MultiChannelMessageChannelEnum.SMS, instance.Channel);
        }

        /// <summary>
        /// Test the property 'Content'
        /// </summary>
        [Fact]
        public void ContentTest()
        {
            Assert.IsType<MultiChannelChannelListObjectContent>(instance.Content);
        }
    }
}
