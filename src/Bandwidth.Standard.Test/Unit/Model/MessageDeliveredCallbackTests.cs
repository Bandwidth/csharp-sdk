/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Unit.Model
{
    /// <summary>
    ///  Class for testing MessageDeliveredCallback
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MessageDeliveredCallbackTests : IDisposable
    {
        private MessageDeliveredCallback instance;

        public MessageDeliveredCallbackTests()
        {
            instance = new MessageDeliveredCallback(type: "message-delivered", to: "+15557654321", description: "Message delivered to carrier.", message: new MessageDeliveredCallbackMessage(id: "1661365814859loidf7mcwd4qacn7", owner: "+15553332222", applicationId: "93de2206-9669-4e07-948d-329f4b722ee", to: new List<string> { "15557654321" }, from: "+15553332222", text: "Hello world", tag: "test"));
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessageDeliveredCallback
        /// </summary>
        [Fact]
        public void MessageDeliveredCallbackInstanceTest()
        {
            Assert.IsType<MessageDeliveredCallback>(instance);
        }


        /// <summary>
        /// Test the property 'Time'
        /// </summary>
        [Fact]
        public void TimeTest()
        {
            instance.Time = new DateTime(2020, 1, 1);
            Assert.IsType<DateTime>(instance.Time);
            Assert.Equal(new DateTime(2020, 1, 1), instance.Time);
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            Assert.IsType<string>(instance.Type);
            Assert.Equal("message-delivered", instance.Type);
        }
        /// <summary>
        /// Test the property 'To'
        /// </summary>
        [Fact]
        public void ToTest()
        {
            Assert.IsType<string>(instance.To);
            Assert.Equal("+15557654321", instance.To);
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            Assert.IsType<string>(instance.Description);
            Assert.Equal("Message delivered to carrier.", instance.Description);
        }
        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            Assert.IsType<MessageDeliveredCallbackMessage>(instance.Message);
            Assert.Equal(new MessageDeliveredCallbackMessage(id: "1661365814859loidf7mcwd4qacn7", owner: "+15553332222", applicationId: "93de2206-9669-4e07-948d-329f4b722ee", to: new List<string> { "15557654321" }, from: "+15553332222", text: "Hello world", tag: "test"), instance.Message);
        }

    }

}
