/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Unit.Model
{
    /// <summary>
    ///  Class for testing TfvSubmissionWrapper
    /// </summary>

    public class TfvSubmissionWrapperTests : IDisposable
    {
        private TfvSubmissionWrapper instance;
        private VerificationUpdateRequest submission;

        public TfvSubmissionWrapperTests()
        {
            submission = new VerificationUpdateRequest(
                businessAddress: new Address(
                    name: "name",
                    addr1: "addr1",
                    addr2: "addr2",
                    city: "city",
                    state: "state",
                    zip: "zip",
                    url: "url"
                ),
                businessContact: new Contact(
                    firstName: "John",
                    lastName: "Doe",
                    email: "email@email.com",
                    phoneNumber: "+1234567890"
                ),
                messageVolume: 100,
                useCase: "test",
                useCaseSummary: "test",
                productionMessageContent: "test",
                optInWorkflow: new OptInWorkflow(
                    description: "description",
                    imageUrls: new List<string> { "imageUrls" }
                ),
                additionalInformation: "test",
                isvReseller: "test",
                privacyPolicyUrl: "test",
                termsAndConditionsUrl: "test",
                businessDBA: "test"
            );

            instance = new TfvSubmissionWrapper(
                submission: submission
            );
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TfvSubmissionWrapper
        /// </summary>
        [Fact]
        public void TfvSubmissionWrapperInstanceTest()
        {
            Assert.IsType<TfvSubmissionWrapper>(instance);
        }

        /// <summary>
        /// Test the property 'Submission'
        /// </summary>
        [Fact]
        public void SubmissionTest()
        {
            Assert.IsType<VerificationUpdateRequest>(instance.Submission);
            Assert.Equal(submission, instance.Submission);
        }
    }
}
