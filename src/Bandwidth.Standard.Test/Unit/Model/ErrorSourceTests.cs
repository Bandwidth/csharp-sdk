/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Model
{
    /// <summary>
    ///  Class for testing ErrorSource
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ErrorSourceTests : IDisposable
    {
        private ErrorSource instance;

        public ErrorSourceTests()
        {
            instance = new ErrorSource(
                varParameter: "TestParameter",
                field: "TestField",
                header: "TestHeader",
                reference: "TestReference"
            );
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ErrorSource
        /// </summary>
        [Fact]
        public void ErrorSourceInstanceTest()
        {
            Assert.IsType<ErrorSource>(instance);
        }

        /// <summary>
        /// Test the property 'Parameter'
        /// </summary>
        [Fact]
        public void ParameterTest()
        {
            Assert.IsType<string>(instance.Parameter);
            Assert.Equal("TestParameter", instance.Parameter);
        }

        /// <summary>
        /// Test the property 'Field'
        /// </summary>
        [Fact]
        public void FieldTest()
        {
            Assert.IsType<string>(instance.Field);
            Assert.Equal("TestField", instance.Field);
        }

        /// <summary>
        /// Test the property 'Header'
        /// </summary>
        [Fact]
        public void HeaderTest()
        {
            Assert.IsType<string>(instance.Header);
            Assert.Equal("TestHeader", instance.Header);
        }

        /// <summary>
        /// Test the property 'Reference'
        /// </summary>
        [Fact]
        public void ReferenceTest()
        {
            Assert.IsType<string>(instance.Reference);
            Assert.Equal("TestReference", instance.Reference);
        }
    }
}
