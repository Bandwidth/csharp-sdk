/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Unit.Model
{
    /// <summary>
    ///  Class for testing CallTranscription
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CallTranscriptionTests : IDisposable
    {
        private CallTranscription instance;

        public CallTranscriptionTests()
        {
            instance = new CallTranscription();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CallTranscription
        /// </summary>
        [Fact]
        public void CallTranscriptionInstanceTest()
        {
            Assert.IsType<CallTranscription>(instance);
        }

        /// <summary>
        /// Test the property 'DetectedLanguage'
        /// </summary>
        [Fact]
        public void DetectedLanguageTest()
        {
            instance.DetectedLanguage = CallTranscriptionDetectedLanguageEnum.EnUS;
            Assert.IsType<CallTranscriptionDetectedLanguageEnum>(instance.DetectedLanguage);
            Assert.Equal(CallTranscriptionDetectedLanguageEnum.EnUS, instance.DetectedLanguage);
        }

        /// <summary>
        /// Test the property 'Track'
        /// </summary>
        [Fact]
        public void TrackTest()
        {
            instance.Track = CallTranscriptionTrackEnum.Inbound;
            Assert.IsType<CallTranscriptionTrackEnum>(instance.Track);
            Assert.Equal(CallTranscriptionTrackEnum.Inbound, instance.Track);
        }

        /// <summary>
        /// Test the property 'Transcript'
        /// </summary>
        [Fact]
        public void TranscriptTest()
        {
            instance.Transcript = "test";
            Assert.IsType<string>(instance.Transcript);
            Assert.Equal("test", instance.Transcript);
        }

        /// <summary>
        /// Test the property 'Confidence'
        /// </summary>
        [Fact]
        public void ConfidenceTest()
        {
            instance.Confidence = 0.5;
            Assert.IsType<double>(instance.Confidence);
            Assert.Equal(0.5, instance.Confidence);
        }
    }
}
