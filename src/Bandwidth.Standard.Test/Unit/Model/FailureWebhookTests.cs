/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Unit.Model
{
    /// <summary>
    ///  Class for testing FailureWebhook
    /// </summary>
    public class FailureWebhookTests : IDisposable
    {
        private FailureWebhook instance;
        private Guid guid = Guid.NewGuid();

        public FailureWebhookTests()
        {
            instance = new FailureWebhook(
                accountId: "accountId",
                phoneNumber: "phoneNumber",
                errorCode: "errorCode",
                errorDescription: "errorDescription",
                errors: new List<string> { "error" },
                internalTicketNumber: guid
            );
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FailureWebhook
        /// </summary>
        [Fact]
        public void FailureWebhookInstanceTest()
        {
            Assert.IsType<FailureWebhook>(instance);
        }

        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            Assert.IsType<string>(instance.AccountId);
            Assert.Equal("accountId", instance.AccountId);
        }

        /// <summary>
        /// Test the property 'PhoneNumber'
        /// </summary>
        [Fact]
        public void PhoneNumberTest()
        {
            Assert.IsType<string>(instance.PhoneNumber);
            Assert.Equal("phoneNumber", instance.PhoneNumber);
        }

        /// <summary>
        /// Test the property 'ErrorCode'
        /// </summary>
        [Fact]
        public void ErrorCodeTest()
        {
            Assert.IsType<string>(instance.ErrorCode);
            Assert.Equal("errorCode", instance.ErrorCode);
        }

        /// <summary>
        /// Test the property 'ErrorDescription'
        /// </summary>
        [Fact]
        public void ErrorDescriptionTest()
        {
            Assert.IsType<string>(instance.ErrorDescription);
            Assert.Equal("errorDescription", instance.ErrorDescription);
        }

        /// <summary>
        /// Test the property 'Errors'
        /// </summary>
        [Fact]
        public void ErrorsTest()
        {
            Assert.IsType<List<string>>(instance.Errors);
            Assert.Equal(new List<string> { "error" }, instance.Errors);
        }

        /// <summary>
        /// Test the property 'InternalTicketNumber'
        /// </summary>
        [Fact]
        public void InternalTicketNumberTest()
        {
            Assert.IsType<Guid>(instance.InternalTicketNumber);
            Assert.Equal(guid, instance.InternalTicketNumber);
        }
    }
}
