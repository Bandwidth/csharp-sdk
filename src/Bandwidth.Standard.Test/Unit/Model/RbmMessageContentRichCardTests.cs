/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Unit.Model
{
    /// <summary>
    ///  Class for testing RbmMessageContentRichCard
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RbmMessageContentRichCardTests : IDisposable
    {
        private List<MultiChannelAction> suggestions;
        private RbmCardContent cardContent;
        private RbmMessageContentRichCard instanceRbmStandaloneCard;
        private RbmMessageContentRichCard instanceRbmMessageCarouselCard;

        public RbmMessageContentRichCardTests()
        {
            suggestions = new List<MultiChannelAction> {
                new MultiChannelAction(new RbmActionBase(
                    type: RbmActionTypeEnum.REPLY,
                    text: "Test",
                    postbackData: new byte[] { 1, 2, 3 }
                ))
            };

            cardContent = new RbmCardContent(
                title: "TestTitle",
                description: "TestDescription",
                media: new RbmCardContentMedia(
                    fileUrl: "https://test.url/",
                    thumbnailUrl: "https://test.url/",
                    height: RbmMediaHeightEnum.MEDIUM
                ),
                suggestions: suggestions
            );

            instanceRbmStandaloneCard = new RbmMessageContentRichCard(new RbmStandaloneCard(
                orientation: StandaloneCardOrientationEnum.VERTICAL,
                thumbnailImageAlignment: ThumbnailAlignmentEnum.LEFT,
                cardContent: cardContent,
                suggestions: suggestions
            ));
            instanceRbmMessageCarouselCard = new RbmMessageContentRichCard(new RbmMessageCarouselCard(
                cardWidth: CardWidthEnum.SMALL,
                cardContents: new List<RbmCardContent> { cardContent },
                suggestions: suggestions
            ));
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RbmMessageContentRichCard
        /// </summary>
        [Fact]
        public void RbmMessageContentRichCardInstanceTest()
        {
            Assert.IsType<RbmMessageContentRichCard>(instanceRbmStandaloneCard);
            Assert.IsType<RbmStandaloneCard>(instanceRbmStandaloneCard.ActualInstance);
            Assert.IsType<RbmMessageContentRichCard>(instanceRbmMessageCarouselCard);
            Assert.IsType<RbmMessageCarouselCard>(instanceRbmMessageCarouselCard.ActualInstance);
        }
    }
}
