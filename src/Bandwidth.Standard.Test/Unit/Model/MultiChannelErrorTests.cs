/*
 * Bandwidth
 *
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Bandwidth.Standard.Model;
using Bandwidth.Standard.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Bandwidth.Standard.Test.Model
{
    /// <summary>
    ///  Class for testing MultiChannelError
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MultiChannelErrorTests : IDisposable
    {
        private MultiChannelError instance;

        public MultiChannelErrorTests()
        {
            instance = new MultiChannelError(
                links: new List<Link>(),
                data: new Dictionary<string, object>(),
                errors: new List<ErrorObject>()
            );
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MultiChannelError
        /// </summary>
        [Fact]
        public void MultiChannelErrorInstanceTest()
        {
            Assert.IsType<MultiChannelError>(instance);
        }

        /// <summary>
        /// Test the property 'Links'
        /// </summary>
        [Fact]
        public void LinksTest()
        {
            Assert.IsType<List<Link>>(instance.Links);
            Assert.NotEmpty(instance.Links);
        }

        /// <summary>
        /// Test the property 'Data'
        /// </summary>
        [Fact]
        public void DataTest()
        {
            Assert.IsType<Dictionary<string, object>>(instance.Data);
        }

        /// <summary>
        /// Test the property 'Errors'
        /// </summary>
        [Fact]
        public void ErrorsTest()
        {
            Assert.IsType<List<ErrorObject>>(instance.Errors);
            Assert.NotEmpty(instance.Errors);
        }
    }
}
